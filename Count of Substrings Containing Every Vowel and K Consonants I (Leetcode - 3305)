class Solution {
    public boolean isValid(String s, int k){
        Map<Character, Integer> map = new HashMap<>();
        map.put('a', 0);
        map.put('e', 0);
        map.put('i', 0);
        map.put('o', 0);
        map.put('u', 0);

        int consonant = 0;
        for(int i=0; i<s.length(); i++){
            if(map.containsKey(s.charAt(i))){
                map.put(s.charAt(i), map.get(s.charAt(i))+1);
            }
            else{
                consonant++;
            }
        }
        
        for(char ch: map.keySet()){
            if(map.get(ch)==0) return false;
        }

        if(consonant!=k) return false;
        return true;
    }
        
    public int countOfSubstrings(String word, int k) {
        int count = 0;
        for(int i=0; i<word.length(); i++){
            for(int j=i+1; j<=word.length(); j++){
                if( word.substring(i, j).length()>=(k+5) && isValid(word.substring(i, j), k)){
                    count++;
                }
            }
        }
        return count;
    }
}
