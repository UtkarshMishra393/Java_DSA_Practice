class Solution {
    public int solve(int amount, int[] coins, int idx, int[][] dp){
        if(idx<0) return 0;
        if(amount==0) return 1;

        if(dp[idx][amount] != -1) return dp[idx][amount];

        int notTake = solve(amount, coins, idx-1, dp);
        int take = 0;
        if(coins[idx] <= amount){
            take = solve(amount - coins[idx], coins, idx, dp);
        }

        return dp[idx][amount] = take + notTake;
    }
    public int change(int amount, int[] coins) {
        int n = coins.length;
        int[][] dp = new int[n][amount+1];
        for(int i=0; i<n; i++){
            for(int j=0; j<amount+1; j++){
                dp[i][j] = -1;
            }
        }
        return solve(amount, coins, n-1, dp);
    }
}
