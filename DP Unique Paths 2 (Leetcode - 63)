class Solution {
    public int solve(int[][] arr, int i, int j, int[][] dp){
        if(i<0 || j<0) return 0;
        if(arr[i][j]==1) return 0;
        if(i==0 && j==0) return 1;

        if(dp[i][j] != -1) return dp[i][j];
        
        int left = solve(arr, i, j-1, dp);
        int up = solve(arr, i-1, j, dp);

        return dp[i][j] = left + up;
    }
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int n = obstacleGrid.length;
        int m = obstacleGrid[0].length;
        int[][] dp = new int[n][m];
        for(int i=0; i<n; i++){
            Arrays.fill(dp[i], -1);
        }
        return solve(obstacleGrid, n-1, m-1, dp);
    }
}
