class Solution {
    public int solve(int[] nums, int i, int prev, int[][] dp){
        if(i<0) return 0;

        if(prev!= -1 && dp[i][prev] != -1) return dp[i][prev];

        int take = 0;
        if(prev == -1 || nums[i]<nums[prev]){
            take = 1 + solve(nums, i-1, i, dp);
        }
        int notTake = solve(nums, i-1, prev, dp);

        int max = Math.max(take, notTake);
        if(prev != -1) dp[i][prev] = max;
        return  max;
    }
    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n][n];
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                dp[i][j] = -1;
            }
        }
        return solve(nums, n-1, -1, dp);
    }
}
