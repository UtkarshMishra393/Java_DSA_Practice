public class Solution {
    public static int minSubsetSumDifference(int []arr, int n) {
        int target = 0;
        for(int i=0; i<n; i++){
            target += arr[i];
        }

        boolean dp[][] = new boolean[n][target+1];
        for(int i=0; i<n; i++){
            dp[i][0] = true;
        }
        dp[0][arr[0]] = true;
        
        for(int i=1; i<n; i++){
            for(int j=1; j<target+1;j++){
                boolean notTake = dp[i-1][j];
                boolean take = false;
                if(j-arr[i]>=0 && arr[i] <= target){
                    take = dp[i-1][j-arr[i]];
                }
                dp[i][j] = notTake || take; 
            }
        }

        int min = Integer.MAX_VALUE;
        for(int i=0; i<target+1; i++){
            if(dp[n-1][i]){
                int subset1 = i;
                int subset2 = target - i;
                min = Math.min(min, Math.abs(subset1 - subset2));
            }
        }

        return min;
    }
}
