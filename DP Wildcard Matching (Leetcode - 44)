class Solution {
    public boolean solve(String s, String p, int i, int j, int[][] dp){
        if(i<0 && j<0) return true;
        if(j<0) return false;
        if(i<0){
            while(j>=0){
                if(p.charAt(j) != '*') return false;
                j--;
            }
            return true;
        }

        if(dp[i][j] != -1) return dp[i][j]==1?true:false;  
        
        if(s.charAt(i)==p.charAt(j) || p.charAt(j)== '?'){
            if(solve(s, p, i-1, j-1, dp)){
                dp[i][j] = 1;
                return true;
            }
            dp[i][j] = 0;
            return false;
        }
        else if(p.charAt(j)== '*'){
            if(solve(s, p, i, j-1, dp) || solve(s, p, i-1, j, dp)){
                dp[i][j] = 1;
                return true;
            }
            dp[i][j] = 0;
            return false;
        }
        return false;
    }
    public boolean isMatch(String s, String p) {
        int n = s.length();
        int m = p.length();
        int[][] dp = new int[n][m];
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                dp[i][j] = -1;
            }
        }
        return solve(s, p, n-1, m-1, dp);
    }
}
