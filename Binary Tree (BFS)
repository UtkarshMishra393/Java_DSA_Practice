import java.util.*;

public class Main
{
    public static class Node{
        int val;
        Node left;
        Node right;
        public Node(int val){
            this.val = val;
        }
        
    }
    
    public static int height(Node root){
        if(root==null || (root.left==null && root.right==null)) return 0;
        return 1 + Math.max(height(root.left), height(root.right));
    }
    
    public static void nthlevel(Node root, int n){
        if(root==null) return;
        if(n==1){
            System.out.print(root.val+ " ");
            return;
        }  
        nthlevel(root.left, n-1);
        nthlevel(root.right, n-1);
    }
    
    
    public static void bfs(Node root){
        Queue<Node> que = new LinkedList<>();
        que.add(root);
        while(que.size()>0){
            if(que.peek().left!=null) que.add(que.peek().left);
            if(que.peek().right!=null) que.add(que.peek().right);
            System.out.print(que.remove().val+ " ");
        }
    }
    
	public static void main(String[] args) {
		Node a = new Node(1);
		Node b = new Node(2);
		Node c = new Node(3);
		Node d = new Node(4);
		Node e = new Node(5);
		Node f = new Node(6);
		Node g = new Node(7);
		
		a.left = b;
		a.right = c;
		b.left = d;
		b.right = e;
		c.left = f;
		c.right = g;
		
		int level = height(a) + 1;
		System.out.print("Level Order using nth Level: ");
		for(int i=1; i<=level; i++){
		    nthlevel(a, i);
		}
		
		System.out.println();
		System.out.print("BFS: ");
		bfs(a);
		
	}
}
