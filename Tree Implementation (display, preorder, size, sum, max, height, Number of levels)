public class Main
{
    static int size=0;
    public static class Node{
        int val;
        Node left;
        Node right;
        
        public Node(int val){
            this.val = val;
        }
        // size++;
    }
    
    public static void displayTree(Node root){
        if(root==null){
            return;
        }
        System.out.print(root.val + " -> ");
        if(root.left!=null) System.out.print(root.left.val + ", ");
        else System.out.print("n, ");
        if(root.right!=null) System.out.print(root.right.val);
        else System.out.print("n");
        System.out.println();
        displayTree(root.left);
        displayTree(root.right);
    }
    
    public static void preorder(Node root){
        if(root==null){
            return;
        }
        System.out.print(root.val+" ");
        size++;
        preorder(root.left);
        preorder(root.right);
    }
    
    public static int size(Node root){
        if(root==null) return 0;
        return size(root.left) + size(root.right) + 1;
    }
    
    public static int sumOfTree(Node root){
        if(root==null) return 0;
        return root.val + sumOfTree(root.left) + sumOfTree(root.right);
    }
    
    public static int maxValue(Node root){
        if(root == null){
            return Integer.MIN_VALUE;
        }
        return Math.max(root.val, Math.max(maxValue(root.left), maxValue(root.right)));
    }
    
    public static int height(Node root){
        if(root==null || (root.left==null && root.right==null)) return 0;
        return 1 + Math.max(height(root.left), height(root.right));
    }
    
	public static void main(String[] args) {
        Node root = new Node(1);
        Node a = new Node(2);
        Node b = new Node(3);
        Node c = new Node(4);
        Node d = new Node(5);
        Node e = new Node(6);
        Node f = new Node(7);
        
        root.left = a;
        root.right = b;
        a.left = c;
        a.right = d;
        b.right = e;
        e.left = f;
        
        displayTree(root);
        preorder(root);
        System.out.println();
        System.out.println("Size: "+size(root));
        System.out.println("Sum of all the Values of tree: "+sumOfTree(root));
        // System.out.println("Size: "+ size);
        System.out.println("Maximum Value: "+maxValue(root));
        System.out.println("height: "+ height(root));
        System.out.println("Number of Levels: "+ (height(root)+1));
	}
}
